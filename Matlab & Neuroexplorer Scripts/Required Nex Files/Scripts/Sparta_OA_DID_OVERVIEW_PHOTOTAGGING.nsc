%Sparta_OA_DID_overview-to-PPT.nsc
%James Irving - 12-30-2015

%%Run overview analyses and export to powerpoint to get a general idea of neuronal activity
%%% Should then be followed up with more specific analyses. 

%%%NOTE: File name and location of .ppt will be same as the original data file. 
%%%NOTE: If you want to export results to Excel or Matlab, set that option in your Analysis Parameters window, hit Apply(F5) or run analysis, THEN save as your template.

%%Required document and filepath selection 
doc=GetActiveDocument()
path=GetDocPath(doc)
savePPT="Y"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%Get File Name and Path to Save Excel and PPT files to same directory, shorten excel name if its too long
tit = GetDocTitle(doc)
extStart=Find(tit,".")
filename=Left(tit,extStart-1)
%fileFolder=Left(tit

extStartPath=Find(path,".")
filenamepath=Left(path,extStartPath-1)


%%%To get just the folder name
nDocname=StrLength(tit)
nFilepath=StrLength(path)
folder=Left(path, nFilepath-nDocname)
%%

pptName= filenamepath+" NexRes"+".ppt"
if StrLength(pptName) > 218
    charLeft=StrLength(pptName) - 218
    pptShortPath=Left(filenamepath,218-charLeft)
    pptName=pptShortPath+ " NexRes"+".ppt"
end

Trace("pptName="+pptName)


%excelName=filenamepath+" Nex Output"+".xls"
excelName=filenamepath+" NexRes"+".xls"
if StrLength(excelName) > 218
    charLeft=StrLength(excelName) - 218
    excelShortPath=Left(filenamepath,218-charLeft)
    excelName=excelShortPath+ " NexRes"+".ppt"
end

Trace("excelName="+excelName)


DeselectAll(doc)
numEvents=GetVarCount(doc,"event")

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%RENAME EVENTS & MAKE INTERVAL FILTERS%%%%
numEvents = GetVarCount(doc,"event")
numMarkers = GetVarCount(doc,"marker")
Trace(numEvents, numMarkers)
if numMarkers > numEvents
    var_type = "marker"
    numEVT = numMarkers
else
    var_type = "event"
    numEVT = numEvents
end
for j = 1 to numEVT
    currEvt = GetVarName(doc,j, var_type)
    %numName= Right(fullName, 3)
    if Find(currEvt,"EVT25")>0
        doc.EventPulseUNFILT = doc.EVT25
        doc["EventPulse"] = ISIFilter(doc["EventPulseUNFILT"], 0.01)

        
        %%Make interval filters around EventPulse        
        %doc.IntFilter_IntPulse5ms = MakeIntervals(doc.EventPulse, 0, 0.005)
        %doc.IntFilter_IntPulse10ms = MakeIntervals(doc.EventPulse, 0, 0.01)
        %doc["IntFilter_NOT_IntPulse10ms"] = IntOpposite(doc, doc["IntFilter_IntPulse10ms"])
        %Select(doc,GetVarByName(doc,"IntFilter_IntPulse10ms"))
        %Select(doc,GetVarByName(doc,"IntFilter_NOT_IntPulse10ms"))
        %SendSelectedVarsToMatlab(doc)
        %DeselectAll(doc)
    end
    
    if Find(currEvt,"EVT09")>0
    doc.EventTrain = doc.EVT09
    end


    if Find(currEvt,"EVT04")>0
    doc.EventMEDttl= doc.EVT04
    end
    
    if Find(currEvt,"EVT03")>0
    doc.EventLickRAW = doc.EVT03
    doc["EventLick"] = Shift(doc["EventLickRAW"], -0.003)
    end


    %%%Check for MAP Events
    if Find(currEvt,"Event016")>0
        numTS_A=GetSpikeCount(GetVarByName(doc, "Event016"))    % can i use get var by name here? How else can i select Event A
        numTS_B=GetSpikeCount(GetVarByName(doc, "Event016_1"))    % can i use get var by name here? How else can i select Event B

        %numTS_A=GetVarSpikeCount(doc, EventA,"event")    % can i use get var by name here? How else can i select Event A
        %numTS_B=GetVarSpikeCount(doc, EventB,"event")    % can i use get var by name here? How else can i select Event B
        %%%%Rename events for templates
        if numTS_A > numTS_B
            doc.EventPulseRAW = doc.Event016
            doc.EventTrain = doc.Event016_1
        else
             if numTS_B > numTS_A
            doc.EventPulseRAW = doc.Event016_1
            doc.EventTrain = doc.Event016
             end
        end
        %doc.EventLick=doc.Event015
        doc.EventPulseUNFILT = doc.EventPulseRAW
        doc.EventPulseUNFILTtoShift = Shift(doc["EventPulseUNF"], -0.005)
        doc["EventPulse"] = ISIFilter(doc["EventPulseUNFILTtoShift"], 0.01)

        doc.EventLickRAW = doc.Event015
        doc["EventLick"] = Shift(doc["EventLickRAW"], -0.003)
    end
    
end
%DeselectAll(doc)

%Select(GetVarByName(d)
doc.IntFilter_IntPulse5ms = MakeIntervals(doc.EventPulse, 0, 0.005)
doc.IntFilter_IntPulse10ms = MakeIntervals(doc.EventPulse, 0, 0.01)
doc["IntFilter_NOT_IntPulse10ms"] = IntOpposite(doc, doc["IntFilter_IntPulse10ms"])

%end
DeselectAll(doc)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%Compare average WFs for whole session, 10ms post-stim, and non-10ms-post-stim and export to powerpoint and excel
%%Follow up in excel using: https://www.dropbox.com/s/u1uluuyygweb6h4/Phototagging%20Template%20-%20Compare%20WFs.xlsx?dl=0 
numWFs=GetVarCount(doc,"wave")

for w = 1 to numWFs  
    eWF= GetVarName(doc,w,"wave")
    WFnum=Right(eWF,4)
    if Find(WFnum,"i") > 0
        %Trace(WFnum)
    else
        %SelectVar(doc,w,"wave")
         Select(doc,GetVarByName(doc,eWF))
    end
end


%%%Send All waveforms to ppt
ApplyTemplate(doc,"OA_waveforms")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"Average Waveforms - All WFs","",1,1)
end

%SendResultsToExcel(doc,excelName,"wfCompAllRes_AllWFs",1,"A1",1,1)
%SendResultsSummaryToExcel(doc,excelName,"Summary-AllWfs ",1,"A1",1,1)


%%%Send waveforms from 10 msec from start of pulse to ppt and matlab (for further analysis)
ModifyTemplate(doc,"OA_waveforms_toMod","Interval Filter","IntFilter_NOT_IntPulse10ms")
Sleep(500)
ApplyTemplate(doc,"OA_waveforms_toMod")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"Average Waveforms-  Opposite of Post-Pulse (10ms)","",1,1)
end

%SendResultsToExcel(doc,excelName,"wfCompAllResNON10ms",1,"A1",1,1)
%SendResultsSummaryToExcel(doc,excelName,"Summary-NON10msWFs ",1,"A1",1,1)


%%%Send waveforms from Opposite of 10 msec post-stim to ppt and matlab (for further analysis)
ModifyTemplate(doc,"OA_waveforms_toMod","Interval Filter","IntFilter_IntPulse10ms")
Sleep(500)
ApplyTemplate(doc,"OA_waveforms_toMod")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"Average Waveforms-Post-Pulse (10ms)","",1,1)
end

%SendResultsToExcel(doc,excelName,"wfCompAllResAllResPulse10ms",1,"A1",1,1)
%SendResultsSummaryToExcel(doc,excelName,"Summary-10msWFs ",1,"A1",1,1)

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
       
        %%%%%%%%%%SELECT VARIABLES AND SEND TO MATLAB
            %%CLEAR
            ExecuteMatlabCommand("close all; clear;")

            %%%SEND EVENTS AND INTERVALS
            Select(doc,(GetVarByName(doc,"EventLick"))))
            Select(doc,(GetVarByName(doc,"EventLick"))))
            Select(doc,(GetVarByName(doc,"EventPulse")))
            Select(doc,(GetVarByName(doc,"EventTrain"))))
            Select(doc,GetVarByName(doc,"IntFilter_IntPulse10ms"))
            Select(doc,GetVarByName(doc,"IntFilter_NOT_IntPulse10ms"))
            Select(doc,GetVarByName(doc,"DIDSessionInts"))
            SendSelectedVarsToMatlab(doc)

            %%Make INFO structure
            infoDefinitions="infoFile='"+ tit +"';"
            ExecuteMatlabCommand(infoDefinitions)

            ExecuteMatlabCommand("INFO=struct(); INFO.file=infoFile; INFO.events.EventPulse=EventPulse; INFO.events.EventTrain=EventTrain; INFO.events.EventLick=EventLick; INFO.events.EventLickRaw=EventLickRAW;")
            ExecuteMatlabCommand("INFO.intervals.DIDSession=DIDSessionInts;  INFO.intervals.IntPulse=IntFilter_IntPulse10ms; INFO.intervals.IntNotPulse=IntFilter_NOT_IntPulse10ms")
        %%%
            
        %%%% MATLAB - calcWFcorrelationNexTrigd%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            %% MAKE NAMES/PATHS
            SaveMatlabMat="save('"+ filename+"_WFs.mat')"
            Trace(SaveMatlabMat)
            cdSavepath="cd('"+folder+"')" %'
            
            %% EXECUTE CODE
            ExecuteMatlabCommand(cdSavepath)
            Trace(cdSavepath)
            ExecuteMatlabCommand("calcWFcorrelationNexTrigd")

            %%CLEARVARS
            % ExecuteMatlabCommand("clearvars -EXCEPT WFs SPK* Event* EVT* sig* Int*")
            %%SAVE
            %ExecuteMatlabCommand(SaveMatlabMat)
            ExecuteMatlabCommand("close all")
            ExecuteMatlabCommand("disp('calcWFcorrelation finished')")
            Trace("calcWFcorrelation finished")
        %%%

        DeselectAll(doc)


        %%%% MATLAB - nexCutRateHisto.m %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            %%%SELECTION OF SORTED NEURONS%%%
                numNeurons = GetVarCount(doc,"neuron")
                for j = 1 to numNeurons
                    fullName = GetVarName(doc,j,"neuron")
                    numName= Right(fullName, 3)
                    if Find(numName,"i")>0

                    else
                        Select(doc,GetVarByName(doc,fullName))

                    end
                end
            %%%


            %%RUN RATE HISTO ANALYSIS AND SEND TO ML
                ApplyTemplate(doc,"OA_rateHist_DIDSessionInts")
                            %        % %TEMPLATE DEFAULTS:
                            %            Bin (sec) = 60
                            %            XMin/XMax type = Auto
                            %            Select Data = All
                            %            Interval Filter = DIDSessionInts\
                            %            Smooth = Gauss
                            %            Sm. Width = 5 
                    if savePPT == "Y"
                    SendGraphicsToPowerPoint(doc,pptName,"DID Session - Rate Histogram","",1,1)
                    end
                    SendResultsToExcel(doc,excelName,"DIDrateHistoRes",1,"A1",1,1)
                    SendResultsSummaryToExcel(doc,excelName,"DIDrateHistoSumm",1,"A1",1,1)
            
            %% EXECUTE CODE
            %ExecuteMatlabCommand(cdSavepath)
            Trace(cdSavepath)
            ExecuteMatlabCommand("nexCutRateHistoNexTrigd")
            
            %%RUN Z PEH PULSE
            ApplyTemplate(doc,"SL_PEH_Pulse_Zscores_ML")
            ExecuteMatlabCommand("nexOUT=struct(); nexOUT.pulse.nexZPulse=nexZPulse; nexOUT.pulse.nexColumnNames=nexColumnNames")
            
            ApplyTemplate(doc,"SL_PEH_Lick_ZScores_ML")
            ExecuteMatlabCommand("nexOUT=nexOUT.lick.nexZLick=nexZLick; nexOUT.lick.nexColumnNames=nexColumnNames")
            
            %%RUN CRF TEST AND FILL IN DATA
            ExecuteMatlabCommand("isCRFtestNexTrigd")
    
            %%%COMBINED STRUCTURES INTO DATA
            ExecuteMatlabCommand("DATA=struct(); DATA.INFO=INFO; DATA.WF=WFs; DATA.SPKrate=SPK; DATA.CRFtest=CRFtest; DATA.nexOUT=nexOUT;")
            ExecuteMatlabCommand("clearvars -except DATA")
            %ExecuteMatlabCommand("clearvars -EXCEPT DATA INFO WFs SPK CRFtest") %Event* EVT* sig* Int*
            
            %%SAVE
            %% MAKE NAMES/PATHS
            SaveMatlabMat="save('"+ filename+"_DATA.mat')"
            Trace(SaveMatlabMat)
            ExecuteMatlabCommand(SaveMatlabMat)

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%Apply Pre-Existing Tempaltes
%%Either template will auto-select the variables, or you must pre-select the variables for analysis
%%%Depending on the settings for your templates
%%%%If  you want to select specific variables, use the following (minus the square brackets:
%%%%%   [ Select(doc,GetVarByName(doc,"EVT17")) ] 



ApplyTemplate(doc,"OA_PER_tag_EventPulse")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"PER - Each Pulse","",1,1)
end

%
ApplyTemplate(doc,"SL_PEH_Pulse_Zscores")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"PEH - Each Pulse","",1,1)
end


%%
ModifyTemplate(doc,"OA_PER_EventLick_raw","Reference","EventLick")
Sleep(500)
ApplyTemplate(doc,"OA_PER_EventLick_raw")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"PER - Licks","",1,1)
end


ModifyTemplate(doc,"SL_PEH_Lick_ZScores","Reference","EventLick")
Sleep(500)
ApplyTemplate(doc,"SL_PEH_Lick_ZScores")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"ZPEH - Licks","",1,1)
end

%%


%
ApplyTemplate(doc,"OA_rateHisto_full")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"Rate Histogram - Full Session","",1,1)
end

%%

ApplyTemplate(doc,"OA_ISI_100ms_1msbin_raw")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"ISI Histograms","",1,1)
end


ApplyTemplate(doc,"OA_Auto_1ms_smooth")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"Autocorrelogram- Full Session","",1,1)
end


ApplyTemplate(doc,"OA_bursts")

if savePPT == "Y"
SendGraphicsToPowerPoint(doc,pptName,"Burst Analysis- Full Session","",1,1)
end



% %ApplyTemplate(doc,"OA_PER_tag_EventPulse_5ms")

% if savePPT == "Y"
% %SendGraphicsToPowerPoint(doc,pptName,"PER - Each Pulse - 5ms bins","",1,1)
% end

% %
% %ApplyTemplate(doc,"OA_PER_tagTrain_EventTrain")

% if savePPT == "Y"
% %SendGraphicsToPowerPoint(doc,pptName,"PER - Start of Stim Train","",1,1)
% end


% %
% %ApplyTemplate(doc,"OA_PER_tagTrain_pre-post")

% if savePPT == "Y"
% %SendGraphicsToPowerPoint(doc,pptName,"PER - Pre & Post of Stim Train","",1,1)
% end


% %
% %ApplyTemplate(doc,"OA_PER_tag_EventPulse_bigPicture")

% if savePPT == "Y"
% %SendGraphicsToPowerPoint(doc,pptName,"PER - Stimulation - Big Picture","",1,1)
% end



%DeselectAll(doc)
%Bring Neuroexplorer Window into Focus if it was in background



NexOnTop()